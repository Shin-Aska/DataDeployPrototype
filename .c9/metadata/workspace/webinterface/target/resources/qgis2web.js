{"changed":true,"filter":false,"title":"qgis2web.js","tooltip":"/webinterface/target/resources/qgis2web.js","value":"// These variables are for keeping track of the current location\n// idk if we will use this but I just kept it in here just in case\nisTracking = false;\nexternalGeoLocate = \"\";\n\n// If we use the location, it will point out a market. This is the\n// market image to be used\nyourLocation = new ol.style.Style({\n    image: new ol.style.Icon({\n        anchor: [0.5, 46],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'pixels',\n        opacity: 1,\n        src: 'assets/gps.png'\n    }),\n    text: new ol.style.Text({\n        font: '15px Calibri,sans-serif',\n        fill: new ol.style.Fill({color: '#fff'}),\n        stroke: new ol.style.Stroke({\n            color: 'red', width: 5\n        }),\n        text: 'You are here'\n    })\n});\n/******************Location Tracking Initialization*******************/\n// Uses the browser's built in Geolocation feature\ngeolocateControl = function (opt_options) {\n    var options = opt_options || {};\n    var button = document.createElement('button');\n    button.className += ' fa fa-map-marker';\n    var handleGeolocate = function () {\n\n        if ((typeof (manualmode) !== \"undefined\" && manualmode == false) && typeof (geolocation.getPosition()) === \"undefined\") {\n            var result = confirm(\"Sorry, this functionality will not work because your GPS is either turned off or not working. Would you like to turn on manual mode instead?\");\n            if (result) {\n                manual();\n            } else {\n                throw \"action canceled\";\n            }\n        } else {\n            if (isTracking) {\n                //map.removeLayer(geolocateOverlay);\n                isTracking = false;\n            } else if (geolocation.getTracking()) {\n\n                //map.addLayer(geolocateOverlay);\n                if (typeof (manualmode) !== \"undefined\" && manualmode == true) {\n                    map.getView().setCenter(manualcoords);\n                } else {\n                    map.getView().setCenter(geolocation.getPosition());\n                }\n\n                isTracking = true;\n            } else if (typeof (manualmode) !== \"undefined\" && manualmode == true) {\n                map.addLayer(geolocateOverlay);\n                map.getView().setCenter(manualcoords);\n                isTracking = true;\n\n            }\n        }\n\n\n    };\n\n    externalGeoLocate = handleGeolocate;\n    button.addEventListener('click', handleGeolocate, false);\n    button.addEventListener('touchstart', handleGeolocate, false);\n    var element = document.createElement('div');\n    element.className = 'geolocate ol-unselectable ol-control';\n    element.appendChild(button);\n    ol.control.Control.call(this, {\n        element: element,\n        target: options.target\n    });\n};\nol.inherits(geolocateControl, ol.control.Control);\n\ncontainer = document.getElementById('popup');\ncontent = document.getElementById('popup-content');\ncloser = document.getElementById('popup-closer');\ncloser.onclick = function () {\n    container.style.display = 'none';\n    closer.blur();\n    return false;\n};\noverlayPopup = new ol.Overlay({\n    element: container\n});\n\nexpandedAttribution = new ol.control.Attribution({\n    collapsible: false\n});\n\n/******************Route Tracking*******************/\ndeterminant = false;\nblockedGeom = [];\ndrawMap = function () {\n    return determinant;\n}\n\ninteraction = new ol.interaction.DragBox({\n    condition: drawMap,\n    style: new ol.style.Style({\n        stroke: new ol.style.Stroke({\n            color: [255, 0, 255, 1]\n        })\n    })\n});\n\ninteraction.on('boxend', function (evt) {\n    var geom = evt.target.getGeometry();\n    var vectors = geom.B.slice();\n    geom.B = vectors;\n    console.log(geom);\n    var feat = new ol.Feature({\n        geometry: geom\n    });\n\n    var vect = [];\n    for (var i = 0; i < vectors.length; i += 2) {\n        vect.push([vectors[i], vectors[i + 1]]);\n    }\n\n    var testLayer = new ol.source.Vector({\n        features: collection,\n        useSpatialIndex: false // optional, might improve performance\n    });\n\n    var polygon = new ol.geom.Polygon([vect]);\n    var feat = new ol.Feature({\n        geometry: polygon\n    });\n    testLayer.addFeature(feat);\n\n    // Do not remove this commented code. \n    // What this code does is that it loads the information\n    // of the layer IF and only IF it is loaded using WMS.\n    // ---- I might need it in the future.. hehe\n\n    var isInside = false;\n    layerInfoCallStack = [];\n    targetFeature = [];\n    $(\"#editBtn\").css(\"display\", \"none\");\n    for (var i = 0; i < layerGeometry.length; i++) {\n\n        if (layerGeometry[i] == \"Raster\") {\n            targetFeature.push([]);\n        } else {\n            var features = layerGeometry[i].getFeatures();\n            var searchRes = [];\n            for (var j = 0; j < features.length; j++) {\n                var obj = features[j];\n                try {\n                    var point2 = obj.H.geometry.B;\n                    if (testLayer.getFeaturesAtCoordinate(point2).length > 0) {\n                        searchRes.push(obj);\n                        isInside = true;\n                        if (layersConfig[i].type == \"MySQL\") {\n                            $(\"#editBtn\").css(\"display\", \"block\");\n                        }\n                    }\n                } catch (exception) {\n                    console.log(exception);\n                }\n            }\n            targetFeature.push(searchRes);\n        }\n    }\n\n    testLayer.removeFeature(feat);\n    if (isInside) {\n        $(\"#infoContent\").html(loadingBar1);\n        $(\"#popupInfo\").popup(\"open\", {\"transition\": \"flip\"});\n    }\n    \n    var names = [];\n    var properties = [];\n    var values = [];\n    \n    for (var i = 0; i < targetFeature.length; i++) {\n        var info = targetFeature[i];\n        for (var j = 0; j < info.length; j++) {\n            var feat = info[j].H;\n            names.push(info[j].f);\n            var p = [];\n            var v = [];\n            for (prop in feat) {\n                if (feat.hasOwnProperty(prop) && prop != \"geometry\") {\n                    p.push(prop);\n                    v.push(feat[prop]);\n                }\n            }\n            properties.push(p);\n            values.push(v);\n        }\n    }\n    \n    $(\"#infoContent\").html(formatify(names, properties, values, \"info\"));\n    $(\"#infoContent\").enhanceWithin();\n    \n\n    //blockedGeom.push(vect);\n    determinant = false;\n});\n\nhoverInteraction = new ol.interaction.Select({\n  condition: ol.events.condition.pointerMove,\n  multi: true\n});\n\n/******************OpenLayers Initialization*******************/\nmap = new ol.Map({\n    controls: ol.control.defaults({attribution: false}).extend([\n        expandedAttribution, new geolocateControl()\n    ]),\n    projection: 'EPSG:3857',\n    target: document.getElementById('map'),\n    renderer: 'canvas',\n    overlays: [overlayPopup],\n    layers: layersList,\n    view: new ol.View({\n        //extent: bounds, maxZoom: 23, minZoom: 10\n    })\n});\n\nmap.addInteraction(interaction);\nmap.addInteraction(hoverInteraction);\nmap.getView().fit(bounds, map.getSize());\n\nNO_POPUP = 0\nALL_FIELDS = 1\n\n/**\n * Returns either NO_POPUP, ALL_FIELDS or the name of a single field to use for\n * a given layer\n * @param layerList {Array} List of ol.Layer instances\n * @param layer {ol.Layer} Layer to find field info about\n */\ngetPopupFields = function (layerList, layer) {\n    // Determine the index that the layer will have in the popupLayers Array,\n    // if the layersList contains more items than popupLayers then we need to\n    // adjust the index to take into account the base maps group\n    var idx = layersList.indexOf(layer) - (layersList.length - popupLayers.length);\n    return popupLayers[idx];\n}\n\nvectorSource = new ol.source.Vector({\n    features: collection,\n    useSpatialIndex: false // optional, might improve performance\n});\n\ncollection = new ol.Collection();\nfeatureOverlay = new ol.layer.Vector({\n    map: map,\n    source: vectorSource,\n    style: [new ol.style.Style({\n            stroke: new ol.style.Stroke({\n                color: '#f00',\n                width: 1\n            }),\n            fill: new ol.style.Fill({\n                color: 'rgba(255,0,0,0.1)'\n            }),\n        })],\n    updateWhileAnimating: true, // optional, for instant visual feedback\n    updateWhileInteracting: true // optional, for instant visual feedback\n});\n\ndoHighlight = false;\ndoHover = false;\n\nhighlight;\n\n/******************OpenLayer Events*******************/\nonPointerMove = function (evt) {\n    if (!doHover && !doHighlight) {\n        return;\n    }\n    var pixel = map.getEventPixel(evt.originalEvent);\n    var coord = evt.coordinate;\n    var popupField;\n    var popupText = '';\n    var currentFeature;\n    var currentLayer;\n    var currentFeatureKeys;\n    map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n        // We only care about features from layers in the layersList, ignore\n        // any other layers which the map might contain such as the vector\n        // layer used by the measure tool\n        if (layersList.indexOf(layer) === -1) {\n            return;\n        }\n        currentFeature = feature;\n        currentLayer = layer;\n        currentFeatureKeys = currentFeature.getKeys();\n        var doPopup = false;\n        for (k in layer.get('fieldImages')) {\n            if (layer.get('fieldImages')[k] != \"Hidden\") {\n                doPopup = true;\n            }\n        }\n        if (doPopup) {\n            popupText = '<table>';\n            for (var i = 0; i < currentFeatureKeys.length; i++) {\n                if (currentFeatureKeys[i] != 'geometry') {\n                    popupField = '';\n                    if (layer.get('fieldLabels')[currentFeatureKeys[i]] == \"inline label\") {\n                        popupField += '<th>' + layer.get('fieldAliases')[currentFeatureKeys[i]] + ':</th><td>';\n                    } else {\n                        popupField += '<td colspan=\"2\">';\n                    }\n                    if (layer.get('fieldLabels')[currentFeatureKeys[i]] == \"header label\") {\n                        popupField += '<strong>' + layer.get('fieldAliases')[currentFeatureKeys[i]] + ':</strong><br />';\n                    }\n                    if (layer.get('fieldImages')[currentFeatureKeys[i]] != \"Photo\") {\n                        popupField += (currentFeature.get(currentFeatureKeys[i]) != null ? Autolinker.link(String(currentFeature.get(currentFeatureKeys[i]))) + '</td>' : '');\n                    } else {\n                        popupField += (currentFeature.get(currentFeatureKeys[i]) != null ? '<img src=\"images/' + currentFeature.get(currentFeatureKeys[i]).replace(/[\\\\\\/:]/g, '_').trim() + '\" /></td>' : '');\n                    }\n                    popupText = popupText + '<tr>' + popupField + '</tr>';\n                }\n            }\n            popupText = popupText + '</table>';\n        }\n    });\n\n    if (doHighlight) {\n        if (currentFeature !== highlight) {\n            if (highlight) {\n                featureOverlay.getSource().removeFeature(highlight);\n            }\n            if (currentFeature) {\n                var styleDefinition = currentLayer.getStyle().toString();\n\n                if (currentFeature.getGeometry().getType() == 'Point') {\n                    var radius = styleDefinition.split('radius')[1].split(' ')[1];\n\n                    highlightStyle = new ol.style.Style({\n                        image: new ol.style.Circle({\n                            fill: new ol.style.Fill({\n                                color: \"#ffff00\"\n                            }),\n                            radius: radius\n                        })\n                    })\n                } else if (currentFeature.getGeometry().getType() == 'LineString') {\n\n                    var featureWidth = styleDefinition.split('width')[1].split(' ')[1].replace('})', '');\n\n                    highlightStyle = new ol.style.Style({\n                        stroke: new ol.style.Stroke({\n                            color: '#ffff00',\n                            lineDash: null,\n                            width: featureWidth\n                        })\n                    });\n\n                } else {\n                    highlightStyle = new ol.style.Style({\n                        fill: new ol.style.Fill({\n                            color: '#ffff00'\n                        })\n                    })\n                }\n                featureOverlay.getSource().addFeature(currentFeature);\n                featureOverlay.setStyle(highlightStyle);\n            }\n            highlight = currentFeature;\n        }\n    }\n\n    if (doHover) {\n        if (popupText) {\n            overlayPopup.setPosition(coord);\n            content.innerHTML = popupText;\n            container.style.display = 'block';\n        } else {\n            container.style.display = 'none';\n            closer.blur();\n        }\n    }\n};\n\nonSingleClick = function (evt) {\n    if (doHover) {\n        return;\n    }\n    var pixel = map.getEventPixel(evt.originalEvent);\n    var coord = evt.coordinate;\n    var popupField;\n    var popupText = '';\n    var currentFeature;\n    var currentFeatureKeys;\n    map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n        currentFeature = feature;\n        currentFeatureKeys = currentFeature.getKeys();\n        var doPopup = false;\n        for (k in layer.get('fieldImages')) {\n            if (layer.get('fieldImages')[k] != \"Hidden\") {\n                doPopup = true;\n            }\n        }\n        if (doPopup) {\n            popupText = '<table>';\n            for (var i = 0; i < currentFeatureKeys.length; i++) {\n                if (currentFeatureKeys[i] != 'geometry') {\n                    popupField = '';\n                    if (layer.get('fieldLabels')[currentFeatureKeys[i]] == \"inline label\") {\n                        popupField += '<th>' + layer.get('fieldAliases')[currentFeatureKeys[i]] + ':</th><td>';\n                    } else {\n                        popupField += '<td colspan=\"2\">';\n                    }\n                    if (layer.get('fieldLabels')[currentFeatureKeys[i]] == \"header label\") {\n                        popupField += '<strong>' + layer.get('fieldAliases')[currentFeatureKeys[i]] + ':</strong><br />';\n                    }\n                    if (layer.get('fieldImages')[currentFeatureKeys[i]] != \"Photo\") {\n                        popupField += (currentFeature.get(currentFeatureKeys[i]) != null ? Autolinker.link(String(currentFeature.get(currentFeatureKeys[i]))) + '</td>' : '');\n                    } else {\n                        popupField += (currentFeature.get(currentFeatureKeys[i]) != null ? '<img src=\"images/' + currentFeature.get(currentFeatureKeys[i]).replace(/[\\\\\\/:]/g, '_').trim() + '\" /></td>' : '');\n                    }\n                    popupText = popupText + '<tr>' + popupField + '</tr>';\n                }\n            }\n            popupText = popupText + '</table>';\n        }\n    });\n    var view = map.getView();\n    var viewResolution = view.getResolution();\n\n    // Do not remove this commented code. \n    // What this code does is that it loads the information\n    // of the layer IF and only IF it is loaded using WMS.\n    // ---- I might need it in the future.. hehe\n\n    var isInside = false;\n    layerInfoCallStack = [];\n    targetFeature = [];\n    $(\"#editBtn\").css(\"display\", \"none\");\n    \n    /*for (var i = 0; i < layers.length; i++) {\n        var source = layersWMS[i].getSource();\n        var url = source.getGetFeatureInfoUrl(\n                evt.coordinate, viewResolution, view.getProjection(),\n                {'INFO_FORMAT': 'application/json', 'FEATURE_COUNT': 50});\n\n        if (layerGeometry[i] == \"Raster\") {\n            targetFeature.push([]);\n        } else {\n            targetFeature.push(doesIntersect([coord[0], coord[1]], layerGeometry[i]));\n        }\n        if (layerGeometry[i] != \"Raster\" && doesIntersect([coord[0], coord[1]], layerGeometry[i]).length > 0) {\n            isInside = true;\n            if (layersConfig[i].type == \"Shapefile\") {\n                layerInfoCallStack.push(url);\n            } else if (layersConfig[i].type == \"MySQL\") {\n                layerInfoCallStack.push(url);\n                $(\"#editBtn\").css(\"display\", \"block\");\n            }\n\n        }\n    }*/\n    \n    for (var i = 0; i < layerGeometry.length; i++) {\n        if (typeof(layerGeometry[i]) !== \"string\") {\n            \n            var features = doesIntersect([coord[0], coord[1]], layerGeometry[i]);\n            var searchRes = [];\n            if (features.length > 0) {\n                if (layersConfig[i].type == \"MySQL\") {\n                    $(\"#editBtn\").css(\"display\", \"block\");\n                }\n                isInside = true;\n            }\n            \n            targetFeature = targetFeature.concat(features);\n        }   \n    }\n\n    if (isInside) {\n        $(\"#infoContent\").html(loadingBar1);\n        $(\"#popupInfo\").popup(\"open\", {\"transition\": \"flip\"});\n    }\n\n    /*$.post(\"php/infoLister.php\", {\"data\": btoa(JSON.stringify(layerInfoCallStack))}, function (data) {\n        var txtStr = \"\";\n        \n        var names = [];\n        var properties = [];\n        var values = [];\n        \n        for (var i = 0; i < data.info.length; i++) {\n            var info = data.info[i];\n            if (typeof (info.features[0]) !== \"undefined\") {\n                if (info.features[0].geometry != null) {\n                    names.push(info.features[0].id);\n                    var p = [];\n                    var v = [];\n                    \n                    for (prop in info.features[0].properties) {\n                        if (info.features[0].properties.hasOwnProperty(prop)) {\n                            p.push(prop);\n                            v.push(info.features[0].properties[prop]);\n                        }\n                    }\n                    \n                    properties.push(p);\n                    values.push(v);\n                }\n            }\n        }\n        \n        //$(\"#infoContent\").html(txtStr);\n        $(\"#infoContent\").html(formatify(names, properties, values, \"info\"));\n        $(\"#infoContent\").enhanceWithin();\n    }, \"JSON\");*/\n    \n    var names = [];\n    var properties = [];\n    var values = [];\n    \n    for (var i = 0; i < targetFeature.length; i++) {\n        var info = targetFeature[i];\n        var feat = info.H;\n        names.push(info.f);\n        var p = [];\n        var v = [];\n        for (prop in feat) {\n            if (feat.hasOwnProperty(prop) && prop != \"geometry\") {\n                p.push(prop);\n                v.push(feat[prop]);\n            }\n        }\n        properties.push(p);\n        values.push(v);\n    }\n    \n    $(\"#infoContent\").html(formatify(names, properties, values, \"info\"));\n    $(\"#infoContent\").enhanceWithin();\n\n    if (popupText) {\n        overlayPopup.setPosition(coord);\n        content.innerHTML = popupText;\n        container.style.display = 'block';\n    } else {\n        container.style.display = 'none';\n        closer.blur();\n    }\n};\n\n\n\nmap.on('pointermove', function (evt) {\n    onPointerMove(evt);\n});\nmap.on('singleclick', function (evt) {\n    onSingleClick(evt);\n});\n\n\n\ngeolocation = new ol.Geolocation({\n    projection: map.getView().getProjection()\n});\n\n\naccuracyFeature = new ol.Feature();\ngeolocation.on('change:accuracyGeometry', function () {\n    accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());\n});\n\npositionFeature = new ol.Feature();\npositionFeature.setStyle(new ol.style.Style({\n    image: new ol.style.Circle({\n        radius: 6,\n        fill: new ol.style.Fill({\n            color: '#3399CC'\n        }),\n        stroke: new ol.style.Stroke({\n            color: '#fff',\n            width: 2\n        })\n    })\n}));\n\ngeolocation.on('change:position', function () {\n    var coordinates = null;\n    if (typeof (manualmode) !== \"undefined\" && manualmode == true) {\n        coordinates = manualcoords;\n    } else {\n        coordinates = geolocation.getPosition();\n    }\n\n    positionFeature.setGeometry(new ol.geom.Point(coordinates));\n});\n\ngeolocateOverlay = new ol.layer.Vector({\n    source: new ol.source.Vector({\n        features: [accuracyFeature, positionFeature]\n    })\n});\n\ngeolocation.setTracking(true);\n\nif ($.urlParam(\"settings\") != null) {\n    var settings = JSON.parse(atob($.urlParam(\"settings\")));\n    map.getView().setCenter(settings.coords);\n    map.getView().setZoom(settings.zoomLvl);\n}\n\n/*\n * This part of over here can be edited to change the text display on the bottom right corner\n of the app.\n */\n\nvar attribution = document.getElementsByClassName('ol-attribution')[0];\nvar attributionList = attribution.getElementsByTagName('ul')[0];\nvar firstLayerAttribution = attributionList.getElementsByTagName('li')[0];\nvar qgis2webAttribution = document.createElement('li');\nqgis2webAttribution.innerHTML = '<p>Datadeploy Prototype Alpha (Phase 2)</p>';\nattributionList.insertBefore(qgis2webAttribution, firstLayerAttribution);\n$(\".loadModal\").css(\"display\", \"none\")\n","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":474,"column":32},"end":{"row":474,"column":34},"action":"insert","lines":["()"],"id":220}],[{"start":{"row":474,"column":33},"end":{"row":474,"column":34},"action":"insert","lines":["f"],"id":221}],[{"start":{"row":474,"column":34},"end":{"row":474,"column":35},"action":"insert","lines":["e"],"id":222}],[{"start":{"row":474,"column":35},"end":{"row":474,"column":36},"action":"insert","lines":["a"],"id":223}],[{"start":{"row":474,"column":36},"end":{"row":474,"column":37},"action":"insert","lines":["t"],"id":224}],[{"start":{"row":474,"column":37},"end":{"row":474,"column":38},"action":"insert","lines":["u"],"id":225}],[{"start":{"row":474,"column":38},"end":{"row":474,"column":39},"action":"insert","lines":["r"],"id":226}],[{"start":{"row":474,"column":39},"end":{"row":474,"column":40},"action":"insert","lines":["e"],"id":227}],[{"start":{"row":474,"column":40},"end":{"row":474,"column":41},"action":"insert","lines":["s"],"id":228}],[{"start":{"row":473,"column":12},"end":{"row":473,"column":13},"action":"insert","lines":["a"],"id":229}],[{"start":{"row":473,"column":13},"end":{"row":473,"column":14},"action":"insert","lines":["l"],"id":230}],[{"start":{"row":473,"column":14},"end":{"row":473,"column":15},"action":"insert","lines":["e"],"id":231}],[{"start":{"row":473,"column":15},"end":{"row":473,"column":16},"action":"insert","lines":["r"],"id":232}],[{"start":{"row":473,"column":16},"end":{"row":473,"column":17},"action":"insert","lines":["t"],"id":233}],[{"start":{"row":473,"column":17},"end":{"row":473,"column":19},"action":"insert","lines":["()"],"id":234}],[{"start":{"row":473,"column":18},"end":{"row":473,"column":19},"action":"insert","lines":["f"],"id":235}],[{"start":{"row":473,"column":19},"end":{"row":473,"column":20},"action":"insert","lines":["e"],"id":236}],[{"start":{"row":473,"column":20},"end":{"row":473,"column":21},"action":"insert","lines":["a"],"id":237}],[{"start":{"row":473,"column":21},"end":{"row":473,"column":22},"action":"insert","lines":["t"],"id":238}],[{"start":{"row":473,"column":22},"end":{"row":473,"column":23},"action":"insert","lines":["u"],"id":239}],[{"start":{"row":473,"column":23},"end":{"row":473,"column":24},"action":"insert","lines":["r"],"id":240}],[{"start":{"row":473,"column":24},"end":{"row":473,"column":25},"action":"insert","lines":["e"],"id":241}],[{"start":{"row":473,"column":25},"end":{"row":473,"column":26},"action":"insert","lines":["s"],"id":242}],[{"start":{"row":473,"column":26},"end":{"row":473,"column":27},"action":"insert","lines":["."],"id":243}],[{"start":{"row":473,"column":27},"end":{"row":473,"column":28},"action":"insert","lines":["l"],"id":244}],[{"start":{"row":473,"column":28},"end":{"row":473,"column":29},"action":"insert","lines":["e"],"id":245}],[{"start":{"row":473,"column":29},"end":{"row":473,"column":30},"action":"insert","lines":["n"],"id":246}],[{"start":{"row":473,"column":30},"end":{"row":473,"column":31},"action":"insert","lines":["g"],"id":247}],[{"start":{"row":473,"column":31},"end":{"row":473,"column":32},"action":"insert","lines":["t"],"id":248}],[{"start":{"row":473,"column":32},"end":{"row":473,"column":33},"action":"insert","lines":["h"],"id":249}],[{"start":{"row":473,"column":34},"end":{"row":473,"column":35},"action":"insert","lines":[";"],"id":250}],[{"start":{"row":474,"column":12},"end":{"row":474,"column":13},"action":"insert","lines":["t"],"id":251}],[{"start":{"row":474,"column":13},"end":{"row":474,"column":14},"action":"insert","lines":["a"],"id":252}],[{"start":{"row":474,"column":14},"end":{"row":474,"column":15},"action":"insert","lines":["r"],"id":253}],[{"start":{"row":474,"column":15},"end":{"row":474,"column":16},"action":"insert","lines":["g"],"id":254}],[{"start":{"row":474,"column":16},"end":{"row":474,"column":17},"action":"insert","lines":["e"],"id":255}],[{"start":{"row":474,"column":17},"end":{"row":474,"column":18},"action":"insert","lines":["t"],"id":256}],[{"start":{"row":474,"column":18},"end":{"row":474,"column":19},"action":"insert","lines":["F"],"id":257}],[{"start":{"row":474,"column":19},"end":{"row":474,"column":20},"action":"insert","lines":["e"],"id":258}],[{"start":{"row":474,"column":20},"end":{"row":474,"column":21},"action":"insert","lines":["a"],"id":259}],[{"start":{"row":474,"column":21},"end":{"row":474,"column":22},"action":"insert","lines":["t"],"id":260}],[{"start":{"row":474,"column":22},"end":{"row":474,"column":23},"action":"insert","lines":["u"],"id":261}],[{"start":{"row":474,"column":23},"end":{"row":474,"column":24},"action":"insert","lines":["r"],"id":262}],[{"start":{"row":474,"column":24},"end":{"row":474,"column":25},"action":"insert","lines":["e"],"id":263}],[{"start":{"row":474,"column":25},"end":{"row":474,"column":26},"action":"insert","lines":[" "],"id":264}],[{"start":{"row":474,"column":26},"end":{"row":474,"column":27},"action":"insert","lines":["="],"id":265}],[{"start":{"row":474,"column":27},"end":{"row":474,"column":28},"action":"insert","lines":[" "],"id":266}],[{"start":{"row":473,"column":12},"end":{"row":473,"column":35},"action":"remove","lines":["alert(features.length);"],"id":267}],[{"start":{"row":537,"column":4},"end":{"row":538,"column":0},"action":"insert","lines":["",""],"id":268},{"start":{"row":538,"column":0},"end":{"row":538,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":538,"column":4},"end":{"row":538,"column":5},"action":"insert","lines":["a"],"id":269}],[{"start":{"row":538,"column":5},"end":{"row":538,"column":6},"action":"insert","lines":["l"],"id":270}],[{"start":{"row":538,"column":6},"end":{"row":538,"column":7},"action":"insert","lines":["e"],"id":271}],[{"start":{"row":538,"column":7},"end":{"row":538,"column":8},"action":"insert","lines":["r"],"id":272}],[{"start":{"row":538,"column":8},"end":{"row":538,"column":9},"action":"insert","lines":["t"],"id":273}],[{"start":{"row":538,"column":8},"end":{"row":538,"column":9},"action":"remove","lines":["t"],"id":274}],[{"start":{"row":538,"column":7},"end":{"row":538,"column":8},"action":"remove","lines":["r"],"id":275}],[{"start":{"row":538,"column":6},"end":{"row":538,"column":7},"action":"remove","lines":["e"],"id":276}],[{"start":{"row":538,"column":5},"end":{"row":538,"column":6},"action":"remove","lines":["l"],"id":277}],[{"start":{"row":538,"column":5},"end":{"row":538,"column":6},"action":"insert","lines":["l"],"id":278}],[{"start":{"row":538,"column":6},"end":{"row":538,"column":7},"action":"insert","lines":["e"],"id":279}],[{"start":{"row":538,"column":7},"end":{"row":538,"column":8},"action":"insert","lines":["r"],"id":280}],[{"start":{"row":538,"column":8},"end":{"row":538,"column":9},"action":"insert","lines":["t"],"id":281}],[{"start":{"row":538,"column":9},"end":{"row":538,"column":11},"action":"insert","lines":["()"],"id":282}],[{"start":{"row":538,"column":10},"end":{"row":538,"column":11},"action":"insert","lines":["n"],"id":283}],[{"start":{"row":538,"column":11},"end":{"row":538,"column":12},"action":"insert","lines":["a"],"id":284}],[{"start":{"row":538,"column":12},"end":{"row":538,"column":13},"action":"insert","lines":["m"],"id":285}],[{"start":{"row":538,"column":13},"end":{"row":538,"column":14},"action":"insert","lines":["e"],"id":286}],[{"start":{"row":538,"column":14},"end":{"row":538,"column":15},"action":"insert","lines":["s"],"id":287}],[{"start":{"row":538,"column":15},"end":{"row":538,"column":16},"action":"insert","lines":["."],"id":288}],[{"start":{"row":538,"column":16},"end":{"row":538,"column":17},"action":"insert","lines":["l"],"id":289}],[{"start":{"row":538,"column":17},"end":{"row":538,"column":18},"action":"insert","lines":["e"],"id":290}],[{"start":{"row":538,"column":18},"end":{"row":538,"column":19},"action":"insert","lines":["n"],"id":291}],[{"start":{"row":538,"column":19},"end":{"row":538,"column":20},"action":"insert","lines":["g"],"id":292}],[{"start":{"row":538,"column":20},"end":{"row":538,"column":21},"action":"insert","lines":["t"],"id":293}],[{"start":{"row":538,"column":21},"end":{"row":538,"column":22},"action":"insert","lines":["h"],"id":294}],[{"start":{"row":538,"column":23},"end":{"row":538,"column":24},"action":"insert","lines":[";"],"id":295}],[{"start":{"row":523,"column":27},"end":{"row":523,"column":30},"action":"remove","lines":["[j]"],"id":296}],[{"start":{"row":524,"column":27},"end":{"row":524,"column":30},"action":"remove","lines":["[j]"],"id":297}],[{"start":{"row":523,"column":12},"end":{"row":534,"column":27},"action":"remove","lines":["var feat = info.H;","            names.push(info.f);","            var p = [];","            var v = [];","            for (prop in feat) {","                if (feat.hasOwnProperty(prop) && prop != \"geometry\") {","                    p.push(prop);","                    v.push(feat[prop]);","                }","            }","            properties.push(p);","            values.push(v);"],"id":298}],[{"start":{"row":522,"column":8},"end":{"row":524,"column":9},"action":"remove","lines":["for (var j = 0; j < info.length; j++) {","            ","        }"],"id":299},{"start":{"row":522,"column":8},"end":{"row":533,"column":27},"action":"insert","lines":["var feat = info.H;","            names.push(info.f);","            var p = [];","            var v = [];","            for (prop in feat) {","                if (feat.hasOwnProperty(prop) && prop != \"geometry\") {","                    p.push(prop);","                    v.push(feat[prop]);","                }","            }","            properties.push(p);","            values.push(v);"]}],[{"start":{"row":523,"column":0},"end":{"row":523,"column":4},"action":"remove","lines":["    "],"id":300},{"start":{"row":524,"column":0},"end":{"row":524,"column":4},"action":"remove","lines":["    "]},{"start":{"row":525,"column":0},"end":{"row":525,"column":4},"action":"remove","lines":["    "]},{"start":{"row":526,"column":0},"end":{"row":526,"column":4},"action":"remove","lines":["    "]},{"start":{"row":527,"column":0},"end":{"row":527,"column":4},"action":"remove","lines":["    "]},{"start":{"row":528,"column":0},"end":{"row":528,"column":4},"action":"remove","lines":["    "]},{"start":{"row":529,"column":0},"end":{"row":529,"column":4},"action":"remove","lines":["    "]},{"start":{"row":530,"column":0},"end":{"row":530,"column":4},"action":"remove","lines":["    "]},{"start":{"row":531,"column":0},"end":{"row":531,"column":4},"action":"remove","lines":["    "]},{"start":{"row":532,"column":0},"end":{"row":532,"column":4},"action":"remove","lines":["    "]},{"start":{"row":533,"column":0},"end":{"row":533,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":536,"column":4},"end":{"row":536,"column":24},"action":"remove","lines":["alert(names.length);"],"id":301}],[{"start":{"row":536,"column":0},"end":{"row":536,"column":4},"action":"remove","lines":["    "],"id":302}],[{"start":{"row":535,"column":4},"end":{"row":536,"column":0},"action":"remove","lines":["",""],"id":303}],[{"start":{"row":465,"column":27},"end":{"row":465,"column":67},"action":"remove","lines":["layerGeometry[i].getFeaturesAtCoordinate"],"id":312},{"start":{"row":465,"column":27},"end":{"row":465,"column":28},"action":"insert","lines":["d"]}],[{"start":{"row":465,"column":28},"end":{"row":465,"column":29},"action":"insert","lines":["o"],"id":313}],[{"start":{"row":465,"column":29},"end":{"row":465,"column":30},"action":"insert","lines":["e"],"id":314}],[{"start":{"row":465,"column":30},"end":{"row":465,"column":31},"action":"insert","lines":["s"],"id":315}],[{"start":{"row":465,"column":27},"end":{"row":465,"column":31},"action":"remove","lines":["does"],"id":316},{"start":{"row":465,"column":27},"end":{"row":465,"column":40},"action":"insert","lines":["doesIntersect"]}],[{"start":{"row":465,"column":61},"end":{"row":465,"column":62},"action":"insert","lines":[","],"id":317}],[{"start":{"row":465,"column":62},"end":{"row":465,"column":63},"action":"insert","lines":[" "],"id":318}],[{"start":{"row":465,"column":63},"end":{"row":465,"column":64},"action":"insert","lines":["l"],"id":319}],[{"start":{"row":465,"column":64},"end":{"row":465,"column":65},"action":"insert","lines":["a"],"id":320}],[{"start":{"row":465,"column":65},"end":{"row":465,"column":66},"action":"insert","lines":["y"],"id":321}],[{"start":{"row":465,"column":66},"end":{"row":465,"column":67},"action":"insert","lines":["e"],"id":322}],[{"start":{"row":465,"column":67},"end":{"row":465,"column":68},"action":"insert","lines":["r"],"id":323}],[{"start":{"row":465,"column":68},"end":{"row":465,"column":69},"action":"insert","lines":["G"],"id":324}],[{"start":{"row":465,"column":63},"end":{"row":465,"column":69},"action":"remove","lines":["layerG"],"id":325},{"start":{"row":465,"column":63},"end":{"row":465,"column":76},"action":"insert","lines":["layerGeometry"]}],[{"start":{"row":465,"column":76},"end":{"row":465,"column":78},"action":"insert","lines":["[]"],"id":326}],[{"start":{"row":465,"column":77},"end":{"row":465,"column":78},"action":"insert","lines":["i"],"id":327}],[{"start":{"row":618,"column":70},"end":{"row":618,"column":71},"action":"remove","lines":["1"],"id":328},{"start":{"row":618,"column":70},"end":{"row":618,"column":71},"action":"insert","lines":["2"]}],[{"start":{"row":606,"column":46},"end":{"row":606,"column":47},"action":"insert","lines":["d"],"id":331}],[{"start":{"row":606,"column":45},"end":{"row":606,"column":46},"action":"insert","lines":["s"],"id":331}],[{"start":{"row":606,"column":44},"end":{"row":606,"column":45},"action":"insert","lines":["a"],"id":332}]]},"ace":{"folds":[],"scrolltop":10833,"scrollleft":0,"selection":{"start":{"row":621,"column":0},"end":{"row":621,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":600,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1515309316312}